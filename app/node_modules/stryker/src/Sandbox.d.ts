import { Config } from 'stryker-api/config';
import { RunResult } from 'stryker-api/test_runner';
import { File } from 'stryker-api/core';
import { TestFramework } from 'stryker-api/test_framework';
import TranspiledMutant from './TranspiledMutant';
export default class Sandbox {
    private options;
    private index;
    private testFramework;
    private readonly log;
    private testRunner;
    private fileMap;
    private files;
    private workingFolder;
    private testHooksFile;
    private constructor();
    private initialize();
    static create(options: Config, index: number, files: ReadonlyArray<File>, testFramework: TestFramework | null): Promise<Sandbox>;
    run(timeout: number): Promise<RunResult>;
    dispose(): Promise<void>;
    runMutant(transpiledMutant: TranspiledMutant): Promise<RunResult>;
    private reset(mutatedFiles);
    private writeFileInSandbox(file);
    private fillSandbox();
    private fillFile(file);
    private initializeTestRunner();
    private calculateTimeout(mutant);
    private filterTests(mutant);
}
