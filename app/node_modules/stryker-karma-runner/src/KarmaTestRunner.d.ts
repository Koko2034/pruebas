/// <reference types="node" />
import { TestRunner, RunResult, RunnerOptions } from 'stryker-api/test_runner';
import * as karma from 'karma';
import { EventEmitter } from 'events';
export interface ConfigOptions extends karma.ConfigOptions {
    coverageReporter?: {
        type: string;
        dir?: string;
        subdir?: string;
    };
    detached?: boolean;
}
export default class KarmaTestRunner extends EventEmitter implements TestRunner {
    private options;
    private server;
    private serverStartedPromise;
    private currentTestResults;
    private currentErrorMessages;
    private currentCoverageReport?;
    private currentRunResult;
    constructor(options: RunnerOptions);
    init(): Promise<void>;
    run(): Promise<RunResult>;
    private listenToBrowserStarted();
    private listenToSpecComplete();
    private listenToCoverage();
    private listenToRunComplete();
    private listenToBrowserError();
    private configureProperties(karmaConfig);
    private configureCoverageIfEnabled(karmaConfig);
    private configureCoverageReporters(karmaConfig);
    private configureCoveragePlugin(karmaConfig);
    private configureTestRunner(overrides);
    private forceOptions(karmaConfig);
    private runServer();
    private collectRunResult();
    private collectRunState();
}
